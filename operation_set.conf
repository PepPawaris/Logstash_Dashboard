# /var/www/smart-hos/logstash/bin/logstash -f /var/www/smart-hos/logstash/config/operaion_set.conf --path.data=/var/www/temp/
input {
    jdbc {
        #jdbc_driver_library => "/var/www/smart-hos/logstash/mysql-connector-java-8.0.30.jar"
        jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
        jdbc_connection_string => "jdbc:mysql://192.168.80.253:3306/hos?zeroDateTimeBehavior=convertToNull"
        # The user we wish to execute our statement as
        jdbc_user => "sa"
        jdbc_password => "sa"
      
        statement => "select o.operation_id,o.request_doctor,
date_format(o.request_date,'%Y-%m-%d') as request_date ,TIME_FORMAT(o.request_time,'%H:%i:%s') as request_time,o.request_time as request_time_1,
CAST(concat(o.request_date,' ',(o.request_time)) AS datetime) AS datetime_request,
date_format(o.request_operation_date,'%Y-%m-%d') as request_operation_date ,TIME_FORMAT(o.request_operation_time,'%H:%i:%s') as request_operation_time, o.request_operation_time as request_operation_time_1 ,
CAST(concat(o.request_operation_date,' ',(o.request_operation_time)) AS datetime) AS datetime_operation,
o.operation_date,TIME_FORMAT(o.operation_time,'%H:%i:%s') as operation_time,
o.department_id,o.room_id,o.hn,o.vn,o.an,o.patient_department,o.provision_diagnosis,o.provision_diagnosis_text,
o.operation_name,o.operation_position,o.status_id,o.emergency_id,o.staff,
o.enter_date,TIME_FORMAT(o.enter_time,'%H:%i:%s') as enter_time,
o.leave_date ,TIME_FORMAT(o.leave_time,'%H:%i:%s') as leave_time, o.spclty ,o.age_text ,
o.npo_date_time ,o.operation_type_id ,o.operation_time_type_id,
o.confirm_receive , o.chronic_disease , o.operation_sum_price ,
oi.bw,oi.bps,oi.bpd,oi.temperature,oi.rr,oi.hr,pt.drugallergy,
concat(pt.pname,pt.fname,'  ',pt.lname) as ptname,s.status_name,
e.emergency_name,r.room_name,i.name as provision_name ,d.name as request_doctor_name  ,
w.name as ward_name,sp.name as spclty_name,ot.name as operation_type_name,otn.operation_time_type_name , 
if(o.patient_department='OPD',py1.name,py2.name) as pttype_name , if(o.patient_department='OPD',vns.paid_money,ans.paid_money) as paid_money , 
if(o.patient_department='OPD',vns.uc_money,ans.uc_money) as uc_money , if(o.patient_department='OPD',vns.rcpt_money,ans.rcpt_money) as rcpt_money 
from operation_list o  
left outer join patient pt on pt.hn=o.hn  
left outer join operation_status s on s.status_id=o.status_id  
left outer join operation_emergency e on e.emergency_id=o.emergency_id  
left outer join operation_room r on r.room_id=o.room_id  
left outer join operation_screen_in oi on oi.operation_id = o.operation_id  
left outer join icd101 i on i.code=substring(o.provision_diagnosis,1,3)  
left outer join doctor d on d.code=o.request_doctor  
left outer join ipt t on t.an = o.an  
left outer join ward w on w.ward = t.ward  
left outer join spclty sp on sp.spclty = o.spclty  
left outer join operation_type ot on ot.operation_type_id = o.operation_type_id  
left outer join operation_time_type otn on otn.operation_time_type_id = o.operation_time_type_id  
left outer join vn_stat vns on vns.vn = o.vn and vns.vn is not null  
left outer join pttype py1 on py1.pttype = vns.pttype  
left outer join an_stat ans on ans.an = o.an and ans.an is not null  
left outer join pttype py2 on py2.pttype = ans.pttype  
order by o.operation_id"
        }
}
filter {
  mutate {
    copy => { "operation_id" => "[@metadata][_id]"}
    #remove_field => ["cid", "@version", "unix_ts_in_secs"]
  }
}
output {
   elasticsearch {
        hosts => "http://202.44.231.48:9200"
        index => "operation_set"
        user => 'elastic'
        password => '0123456789'
        document_type => "blogs"
        document_id => "%{[@metadata][_id]}"
        }
}
